#!/usr/bin/env python
# coding: utf-8

# # Project: Fundamentals of Information Systems 

# ### Introduction

# This data has been gathered at **two solar power plants** in India over a **34 day** period. It has **two** pairs of files - each pair has **one power generation dataset** and **one sensor readings dataset**. 
# - The **power generation datasets** are gathered at the inverter level - each inverter has multiple lines of solar panels attached to it. 
# - The **sensor data** is gathered at a plant level - a single array of sensors optimally placed at the plant.

# ### Output

# **Questions.**
# - What is the **mean** value of **daily yield**? 
# - What is the **total irradiation per day**? 
# - What is the **max ambient** and **module temperature**? 
# - **How many inverters** are there **for each plant**? 
# - What is the **maximum/minimum amount** of **DC/AC Power generated** in a **time interval/day**? 
# - **Which inverter** (source_key) has produced **maximum DC/AC power**? 
# - **Rank the inverters** based on the **DC/AC power** they produce? Is there **any missing data**?
# 
# 
# - Graphs that explain the patterns for attributes independent of other variables. These will usually be tracked as changes of attributes against DATETIME, DATE, or TIME. 

# **Examples.** How is DC or AC Power changing as time goes by? how is irradiation changing as time goes by? how are ambient and module temperature changing as time goes by? how does yield change as time goes by? Explore plotting variables against different granularities of DATETIME and which is the best option for each variable.

# ### Variables

# ##### Power generation data
# - DATE_TIME: Date and time for each observation. Observations recorded at 15 minute intervals.
# 
# - PLANT_ID: Plant ID - this will be common for the entire file.
# 
# - SOURCE_KEY: Source key in this file stands for the inverter id.
# 
# - DC_POWER: Amount of DC power generated by the inverter (source_key) in this 15 minute interval. Units - kW.
# 
# - AC_POWER: Amount of AC power generated by the inverter (source_key) in this 15 minute interval. Units - kW.
# 
# - DAILY_YIELD: Daily yield is a cumulative sum of power generated on that day, till that point in time.
# 
# - TOTAL_YIELD: This is the total yield for the inverter till that point in time.
# 
# ##### Weather sensor data
# - DATE_TIME: Date and time for each observation. Observations recorded at 15 minute intervals.
# 
# - PLANT_ID: Plant ID - this will be common for the entire file.
# 
# - SOURCE_KEY: Stands for the sensor panel id. This will be common for the entire file because there's only one sensor panel for the plant.
# 
# - AMBIENT_TEMPERATURE: This is the ambient temperature at the plant.
# 
# - MODULE_TEMPERATURE: There's a module (solar panel) attached to the sensor panel. This is the temperature reading for that module.
# 
# - IRRADIATION: Amount of irradiation for the 15 minute interval.

# ###################################################################################################################

# ### Libraries

# In[84]:


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


# ### Data

# In[58]:


p1_gen = pd.read_csv('Desktop/FIS project/Plant_1_Generation_Data.csv')
p1_wea = pd.read_csv('Desktop/FIS project/Plant_1_Weather_Sensor_Data.csv')
p2_gen = pd.read_csv('Desktop/FIS project/Plant_2_Generation_Data.csv')
p2_wea = pd.read_csv('Desktop/FIS project/Plant_1_Weather_Sensor_Data.csv')


# In[82]:


print('# P1 Generation Data:\n', p1_gen.keys())
print('# P1 Shape: ', p1_gen.shape, '\n')
print('# P2 Generation Data:\n', p2_gen.keys())
print('# P1 Shape: ', p2_gen.shape, '\n')
print('# P1 Weather Sensor Data:\n', p1_wea.keys())
print('# P1 Shape: ', p1_wea.shape, '\n')
print('# P2 Weather Sensor Data:\n', p2_wea.keys())
print('# P1 Shape: ', p2_wea.shape, '\n')

